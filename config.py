#!/usr/bin/env python3
"""
Configuraci√≥n para el bot de Telegram
"""

import os
from pathlib import Path

# Configuraci√≥n del bot
BOT_TOKEN = os.getenv('TELEGRAM_BOT_TOKEN', '')

# Configuraci√≥n de logging
LOG_LEVEL = 'INFO'
LOG_FORMAT = '%(asctime)s - %(name)s - %(levelname)s - %(message)s'

# Configuraci√≥n del analizador
DEFAULT_LANGUAGE = 'python'
SUPPORTED_LANGUAGES = ['python', 'javascript', 'java', 'cpp']

# Configuraci√≥n de mensajes
MAX_CODE_LENGTH = 2000  # Longitud m√°xima del c√≥digo para mostrar
MAX_PATTERNS_SHOW = 5   # M√°ximo n√∫mero de patrones a mostrar

# Configuraci√≥n de archivos
MODEL_PATH = "models/algorithm_classifier"
DATASET_PATH = "ml/dataset_generator.py"

# Configuraci√≥n de respuestas
RESPONSE_TEMPLATES = {
    'welcome': """
ü§ñ **Analizador de Algoritmos Bot**

¬°Hola! Soy tu asistente para analizar la complejidad temporal de algoritmos.

**Comandos disponibles:**
‚Ä¢ `/analyze` - Analizar c√≥digo de algoritmo
‚Ä¢ `/help` - Mostrar ayuda
‚Ä¢ `/examples` - Ver ejemplos de algoritmos
‚Ä¢ `/complexity` - Gu√≠a de notaciones asint√≥ticas
‚Ä¢ `/about` - Informaci√≥n sobre el bot

¬°Empecemos! üöÄ
    """,
    
    'error': "‚ùå **Error:** {error}",
    'processing': "üîç Analizando c√≥digo...",
    'no_code': "‚ùå Por favor, incluye c√≥digo para analizar.",
    'help': "ü§ñ Env√≠a c√≥digo de un algoritmo para analizarlo, o usa /help para ver los comandos disponibles."
} 